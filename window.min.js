(function() {
  const windowOverlay = document.getElementById("windowOverlay");
  const windowContent = document.getElementById("windowContent");
  const windowSkeleton = document.getElementById("windowSkeleton");
  const iframe = document.getElementById("windowIframe");
  const errorMessage = document.getElementById("error-message");
  const isMobile = window.matchMedia("(max-width: 480px)").matches;

  if (!windowOverlay || !windowContent || !iframe || !errorMessage) return;

  if (isMobile) windowOverlay.classList.add('mobile');

  const restrictedPages = ['inventory', 'live-stream', 'podcast', 'product-catalog', 'harvest-calendar', 'archive'];

  let sessionCache = null;
  async function checkUserSession() {
    if (sessionCache !== null) return sessionCache;
    try {
      const response = await fetch('/check_session.php', { headers: { 'Content-Type': 'application/json' } });
      const data = await response.json();
      sessionCache = data.loggedIn === true;
      return sessionCache;
    } catch {
      return false;
    }
  }

  window.showWindow = async function(url) {
    let page = '';
    try {
      const normalizedUrl = new URL(url, window.location.origin).pathname;
      page = normalizedUrl.replace(/^\/|\/$/g, '').split('/')[0];
    } catch {}

    if (restrictedPages.includes(page)) {
      const isLoggedIn = await checkUserSession();
      if (!isLoggedIn) {
        errorMessage.textContent = 'Please log in to access this feature.';
        errorMessage.style.display = 'block';
        requestAnimationFrame(() => errorMessage.classList.add('show'));
        iframe.src = '';
        setTimeout(() => {
          errorMessage.classList.remove('show');
          errorMessage.addEventListener('transitionend', () => {
            errorMessage.style.display = 'none';
            window.location.href = '/index.html';
          }, { once: true });
        }, 1500);
        return;
      }
    }

    iframe.src = url;
    windowOverlay.style.display = 'flex';
    requestAnimationFrame(() => windowOverlay.classList.add('visible'));
    windowSkeleton.style.display = 'block';
  };

  const hideSkeleton = () => windowSkeleton.style.display = 'none';

  iframe.addEventListener('load', hideSkeleton);
  setTimeout(hideSkeleton, 5000);

  iframe.addEventListener('error', () => {
    hideSkeleton();
    errorMessage.textContent = 'Unable to load content. Please try again.';
    errorMessage.style.display = 'block';
    requestAnimationFrame(() => errorMessage.classList.add('show'));
    setTimeout(() => {
      errorMessage.classList.remove('show');
      errorMessage.addEventListener('transitionend', () => errorMessage.style.display = 'none', { once: true });
    }, 3000);
  });

  window.closeWindow = function() {
    if (typeof window.hideWindow === 'function') {
      window.hideWindow();
    } else {
      windowOverlay.classList.remove('visible');
      windowOverlay.addEventListener('transitionend', () => {
        windowOverlay.style.display = 'none';
        windowContent.classList.remove('fullscreen');
        iframe.src = '';
      }, { once: true });
    }
  };

  window.toggleFullscreen = function() {
    requestAnimationFrame(() => {
      windowContent.style.willChange = 'width, height, transform';
      windowOverlay.style.willChange = 'top, height, padding-top, width';
      const isFullscreen = windowContent.classList.toggle('fullscreen');
      const isDesktop = window.matchMedia('(min-width: 769px)').matches;
      windowOverlay.style.top = isDesktop ? '40px' : 'env(safe-area-inset-top, 0)';
      windowOverlay.style.height = isDesktop ? 'calc(100dvh - 40px)' : 'calc(100dvh - env(safe-area-inset-top, 0) - env(safe-area-inset-bottom, 0))';
      windowOverlay.style.paddingTop = isFullscreen ? '0' : '12px';
      if (isMobile && !isFullscreen) {
        windowContent.classList.add('animate-back');
        setTimeout(() => windowContent.classList.remove('animate-back'), 400);
      }
      requestAnimationFrame(() => {
        windowContent.style.willChange = '';
        windowOverlay.style.willChange = '';
      });
    });
  };

  const handleInteraction = e => {
    const target = e.target;
    if (target.matches('.window-control.close, .back-button') || (isMobile && target.matches('.back-button'))) {
      e.preventDefault();
      window.closeWindow();
    } else if (target.matches('.window-control.maximize')) {
      e.preventDefault();
      window.toggleFullscreen();
    }
  };

  document.addEventListener('DOMContentLoaded', () => {
    document.addEventListener('click', handleInteraction);
    document.addEventListener('touchstart', handleInteraction, { passive: false });
  });
})();
